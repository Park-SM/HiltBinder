pipeline {
    agent any

    options {
        skipStagesAfterUnstable()
    }

    tools {
        jdk('JAVA11')
    }

    environment {
        BUILD_VARIANT = "Release"

        signing_keyId = credentials("hiltbinder-signing-key-id")
        signing_password = credentials("hiltbinder-signing-password")
        signing_secretKeyRingFile = credentials("hiltbinder-gpg")
        sonatypeStagingProfileId = credentials("hiltbinder-sonatype-profile-id")
    }

    stages {
        stage("Environment") {
            steps {
                script {
                    withCredentials([
                        usernamePassword(
                            credentialsId: "ossrh-account", usernameVariable: 'USR', passwordVariable: 'PWD'
                        )
                    ]) {
                        env.ossrhUsername = "${USR}"
                        env.ossrhPassword = "${PWD}"
                    }
                }
            }
        }

        stage("Assemble") {
            when {
                tag pattern: /release\/(\d+\.\d+\.\d)/, comparator: "REGEXP"
            }
            steps {

                sh "./gradlew clean assemble${env.BUILD_VARIANT} --stacktrace"
            }
        }

        stage("Generate Javadocs") {
            when {
                tag pattern: /release\/(\d+\.\d+\.\d)/, comparator: "REGEXP"
            }
            steps {

                sh "./gradlew hiltbinder:dokkaJavadoc --stacktrace"
                sh "./gradlew hiltbinder-processor:dokkaJavadoc --stacktrace"
            }
        }

        stage("Deploy to Sonatype repository") {
            when {
                tag pattern: /release\/(\d+\.\d+\.\d)/, comparator: "REGEXP"
            }
            steps {

                sh "./gradlew hiltbinder:publishReleasePublicationToSonatypeRepository --stacktrace"
                sh "./gradlew hiltbinder-processor:publishReleasePublicationToSonatypeRepository --stacktrace"
            }
        }
    }
}